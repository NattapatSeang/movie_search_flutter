// Mocks generated by Mockito 5.0.16 from annotations
// in movie_search/test/movie_data_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;
import 'dart:io' as _i2;

import 'package:http/http.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_search/models/movie.dart' as _i7;
import 'package:movie_search/services/local_saving.dart' as _i6;
import 'package:movie_search/services/networking.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeFile_0 extends _i1.Fake implements _i2.File {}

/// A class which mocks [NetworkHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkHelper extends _i1.Mock implements _i3.NetworkHelper {
  MockNetworkHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<Map<dynamic, dynamic>?> getData(
          {String? query, int? page, _i5.Client? mockClient}) =>
      (super.noSuchMethod(
              Invocation.method(#getData, [],
                  {#query: query, #page: page, #mockClient: mockClient}),
              returnValue: Future<Map<dynamic, dynamic>?>.value())
          as _i4.Future<Map<dynamic, dynamic>?>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [LocalSaveHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalSaveHelper extends _i1.Mock implements _i6.LocalSaveHelper {
  MockLocalSaveHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get toFileName =>
      (super.noSuchMethod(Invocation.getter(#toFileName), returnValue: '')
          as String);
  @override
  _i4.Future<String> get localPath =>
      (super.noSuchMethod(Invocation.getter(#localPath),
          returnValue: Future<String>.value('')) as _i4.Future<String>);
  @override
  _i4.Future<List<dynamic>> readObjectList() =>
      (super.noSuchMethod(Invocation.method(#readObjectList, []),
              returnValue: Future<List<dynamic>>.value(<dynamic>[]))
          as _i4.Future<List<dynamic>>);
  @override
  _i4.Future<_i2.File> writeObjectList(List<_i7.Movie>? objectList) =>
      (super.noSuchMethod(Invocation.method(#writeObjectList, [objectList]),
              returnValue: Future<_i2.File>.value(_FakeFile_0()))
          as _i4.Future<_i2.File>);
  @override
  String toString() => super.toString();
}
